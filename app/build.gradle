import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.squareup.app'
}

application {
  mainClass.set('com.squareup.sort.MainKt')
}

dependencies {
  implementation project(':sort')
  implementation libs.clikt
  implementation libs.slf4j

  testImplementation libs.spock
}

tasks.named('shadowJar', ShadowJar) {
  doNotTrackState(
    '''\
      The jar remains up to date even when changing the excludes.
      See also https://github.com/johnrengelman/shadow/issues/62#issuecomment-877728948
      '''.stripIndent()
  )

  group = 'Build'
  description = 'Produces a fat jar'
  reproducibleFileOrder = true

  from sourceSets.main.output
  from project.configurations.runtimeClasspath

  exclude 'META-INF/maven/**'
}

tasks.withType(CreateStartScripts).configureEach {
  applicationName = 'sort'
}

tasks.named('installShadowDist').configure {
  notCompatibleWithConfigurationCache('Uses Project instance')
}

def testRepo = layout.buildDirectory.dir('for-tests')

tasks.register('cleanTestRepo', Delete) {
  delete testRepo
}

publishing {
  publications {
    distZip(MavenPublication) {
      artifactId = 'sort-gradle-dependencies-dist'
      artifact shadowDistZip
    }
    app(MavenPublication) {
      artifactId = 'sort-gradle-dependencies-app'
      from components['java']
    }
  }
  repositories {
    maven {
      name = 'tests'
      url = testRepo
    }
  }
}

// We only want to publish the shadowed component (the "fat jar")
def javaComponent = components['java'] as AdhocComponentWithVariants
['apiElements', 'runtimeElements'].each { unpublishable ->
  javaComponent.withVariantsFromConfiguration(configurations[unpublishable]) {
    skip()
  }
}
